// All material copyright Esri, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.28/esri/copyright.txt for details.
//>>built
require({cache:{"esri/layers/graphics/sources/GeoJSONSource":function(){define("exports ../../../chunks/tslib.es6 ../../../geometry ../../../core/Error ../../../core/has ../../../core/Loadable ../../../core/Logger ../../../core/promiseUtils ../../../core/workers/workers ../../../core/accessorSupport/decorators/property ../../../core/accessorSupport/ensureType ../../../core/arrayUtils ../../../core/accessorSupport/decorators/subclass ./support/clientSideDefaults ../../../rest/support/FeatureSet ../../../geometry/Extent ../../../geometry/Polygon ../../../geometry/support/typeUtils".split(" "),
function(n,c,D,z,J,K,E,L,M,w,P,Q,N,A,d,F,B,e){n.GeoJSONSource=class extends K{constructor(){super(...arguments);this.type="geojson";this.refresh=L.debounce(async a=>{await this.load();const {extent:f,timeExtent:l}=await this._connection.invoke("refresh",a);this.sourceJSON.extent=f;l&&(this.sourceJSON.timeInfo.timeExtent=[l.start,l.end]);return{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(a){this.addResolvingPromise(this._startWorker(null!=a?a.signal:
null));return Promise.resolve(this)}destroy(){this._connection?.close();this._connection=null}applyEdits(a){return this.load().then(()=>this._applyEdits(a))}openPorts(){return this.load().then(()=>this._connection.openPorts())}queryFeatures(a,f={}){return this.load(f).then(()=>this._connection.invoke("queryFeatures",a?a.toJSON():null,f)).then(l=>d.fromJSON(l))}queryFeaturesJSON(a,f={}){return this.load(f).then(()=>this._connection.invoke("queryFeatures",a?a.toJSON():null,f))}queryFeatureCount(a,f=
{}){return this.load(f).then(()=>this._connection.invoke("queryFeatureCount",a?a.toJSON():null,f))}queryObjectIds(a,f={}){return this.load(f).then(()=>this._connection.invoke("queryObjectIds",a?a.toJSON():null,f))}queryExtent(a,f={}){return this.load(f).then(()=>this._connection.invoke("queryExtent",a?a.toJSON():null,f)).then(l=>({count:l.count,extent:F.fromJSON(l.extent)}))}querySnapping(a,f={}){return this.load(f).then(()=>this._connection.invoke("querySnapping",a,f))}_applyEdits(a){if(!this._connection)throw new z("geojson-layer-source:edit-failure",
"Memory source not loaded");const f=this.layer.objectIdField,l=[],q=[],t=[];if(a.addFeatures)for(const k of a.addFeatures)l.push(this._serializeFeature(k));if(a.deleteFeatures)for(const k of a.deleteFeatures)"objectId"in k&&null!=k.objectId?q.push(k.objectId):"attributes"in k&&null!=k.attributes[f]&&q.push(k.attributes[f]);if(a.updateFeatures)for(const k of a.updateFeatures)t.push(this._serializeFeature(k));return this._connection.invoke("applyEdits",{adds:l,updates:t,deletes:q}).then(({extent:k,
timeExtent:r,featureEditResults:u})=>{this.sourceJSON.extent=k;r&&(this.sourceJSON.timeInfo.timeExtent=[r.start,r.end]);return this._createEditsResult(u)})}_createEditsResult(a){return{addFeatureResults:a.addResults?a.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:a.updateResults?a.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:a.deleteResults?a.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],
deleteAttachmentResults:[]}}_createFeatureEditResult(a){const f=!0===a.success?null:a.error||{code:void 0,description:void 0};return{objectId:a.objectId,globalId:a.globalId,error:f?new z("geojson-layer-source:edit-failure",f.description,{code:f.code}):null}}_serializeFeature(a){const {attributes:f}=a;return(a=this._geometryForSerialization(a))?{geometry:a.toJSON(),attributes:f}:{attributes:f}}_geometryForSerialization(a){({geometry:a}=a);return null==a?null:"mesh"===a.type||"extent"===a.type?B.fromExtent(a.extent):
a}async _startWorker(a){this._connection=await M.open("GeoJSONSourceWorker",{strategy:J("feature-layers-workers")?"dedicated":"local",signal:a,registryTarget:this});const {fields:f,spatialReference:l,hasZ:q,geometryType:t,objectIdField:k,url:r,timeInfo:u,customParameters:G}=this.layer;var x="defaults"===this.layer.originOf("spatialReference");x={url:r,customParameters:G,fields:f&&f.map(v=>v.toJSON()),geometryType:e.featureGeometryTypeKebabDictionary.toJSON(t),hasZ:q,objectIdField:k,timeInfo:u?u.toJSON():
null,spatialReference:x?null:l&&l.toJSON()};a=await this._connection.invoke("load",x,{signal:a});for(const v of a.warnings)E.getLogger(this.layer).warn("#load()",`$${v.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:v});a.featureErrors.length&&E.getLogger(this.layer).warn("#load()",`Encountered ${a.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:a.featureErrors});
this.sourceJSON=a.layerDefinition;this.capabilities=A.createCapabilities(this.sourceJSON.hasZ,!0)}};c.__decorate([w.property()],n.GeoJSONSource.prototype,"capabilities",void 0);c.__decorate([w.property()],n.GeoJSONSource.prototype,"type",void 0);c.__decorate([w.property({constructOnly:!0})],n.GeoJSONSource.prototype,"layer",void 0);c.__decorate([w.property()],n.GeoJSONSource.prototype,"sourceJSON",void 0);n.GeoJSONSource=c.__decorate([N.subclass("esri.layers.graphics.sources.GeoJSONSource")],n.GeoJSONSource);
Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})})},"*noref":1}});
define("require ../chunks/tslib.es6 ../geometry ../PopupTemplate ../renderers/ClassBreaksRenderer ../renderers/DictionaryRenderer ../renderers/DotDensityRenderer ../renderers/HeatmapRenderer ../renderers/PieChartRenderer ../renderers/Renderer ../renderers/SimpleRenderer ../renderers/UniqueValueRenderer ../renderers/support/jsonUtils ../renderers/support/types ../core/MultiOriginJSONSupport ../core/promiseUtils ../core/urlUtils ../core/accessorSupport/decorators/property ../core/accessorSupport/ensureType ../core/arrayUtils ../core/has ../core/accessorSupport/decorators/subclass ../geometry/support/typeUtils ./Layer ./graphics/sources/GeoJSONSource ./mixins/BlendLayer ./mixins/CustomParametersMixin ./mixins/FeatureEffectLayer ./mixins/FeatureReductionLayer ./mixins/OperationalLayer ./mixins/OrderedLayer ./mixins/PortalLayer ./mixins/RefreshableLayer ./mixins/ScaleRangeLayer ./mixins/TemporalLayer ./support/commonProperties ./support/FeatureTemplate ./support/FeatureType ./support/Field ./support/fieldProperties ./support/fieldUtils ./support/LabelClass ./support/labelingInfo ../rest/support/Query ../support/popupUtils ../time/timeZoneUtils ../geometry/SpatialReference ../geometry/Extent".split(" "),function(n,
c,D,z,J,K,E,L,M,w,P,Q,N,A,d,F,B,e,a,f,l,q,t,k,r,u,G,x,v,R,S,T,U,V,W,p,X,Y,Z,aa,H,ba,ca,y,da,ea,O,fa){D=aa.defineFieldProperties();d=class extends S.OrderedLayer(G.CustomParametersMixin(v.FeatureReductionLayer(x.FeatureEffectLayer(u.BlendLayer(W.TemporalLayer(V.ScaleRangeLayer(U.RefreshableLayer(R.OperationalLayer(T.PortalLayer(d.MultiOriginJSONMixin(k))))))))))){constructor(b){super(b);this.displayField=this.definitionExpression=this.dateFieldsTimeZone=this.copyright=null;this.editingEnabled=!1;this.geometryType=
this.fullExtent=this.fieldsIndex=this.fields=this.elevationInfo=null;this.hasZ=void 0;this.labelsVisible=!0;this.labelingInfo=null;this.legendEnabled=!0;this.objectIdField=null;this.operationalLayerType="GeoJSON";this.popupEnabled=!0;this.popupTemplate=null;this.screenSizePerspectiveEnabled=!0;this.source=new r.GeoJSONSource({layer:this});this.spatialReference=O.WGS84;this.templates=null;this.title="GeoJSON";this.type="geojson";this.types=this.typeIdField=null}destroy(){this.source?.destroy()}load(b){const g=
this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},b).catch(F.throwIfAbortError).then(()=>this.source.load(b)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl});this.revert(["objectIdField","fields","timeInfo"],"service");H.fixRendererFields(this.renderer,this.fieldsIndex);H.fixTimeInfoFields(this.timeInfo,this.fieldsIndex)});this.addResolvingPromise(g);return Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){this.commitProperty("definitionExpression");
this.commitProperty("timeExtent");this.commitProperty("timeOffset");this.commitProperty("geometryType");this.commitProperty("capabilities");return(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&null==this.geometryType}get parsedUrl(){return this.url?B.urlToObject(this.url):null}set renderer(b){H.fixRendererFields(b,this.fieldsIndex);this._set("renderer",b)}set url(b){b?(b=B.urlToObject(b),this._set("url",b.path),
b.query&&(this.customParameters={...this.customParameters,...b.query})):this._set("url",b)}async applyEdits(b,g){const {applyEdits:h}=await new Promise((m,C)=>n(["./graphics/editingSupport"],m,C));await this.load();b=await h(this,this.source,b,g);this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0});return b}on(b,g){return super.on(b,g)}createPopupTemplate(b){return da.createPopupTemplate(this,b)}createQuery(){const b=new y,
g=this.capabilities?.data;b.returnGeometry=!0;g&&g.supportsZ&&(b.returnZ=!0);b.outFields=["*"];b.where=this.definitionExpression||"1\x3d1";const {timeOffset:h,timeExtent:m}=this;b.timeExtent=null!=h&&null!=m?m.offset(-h.value,h.unit):m||null;return b}getFieldDomain(b,g){let h,m=!1;const C=this.typeIdField&&g?.feature?.attributes?.[this.typeIdField];null!=C&&this.types&&(m=this.types.some(I=>I.id==C?((h=I.domains&&I.domains[b])&&"inherited"===h.type&&(h=this._getLayerDomain(b)),!0):!1));m||h||(h=this._getLayerDomain(b));
return h}getField(b){return this.fieldsIndex.get(b)}queryFeatures(b,g){return this.load().then(()=>this.source.queryFeatures(y.from(b)||this.createQuery(),g)).then(h=>{if(h?.features)for(const m of h.features)m.layer=m.sourceLayer=this;return h})}queryObjectIds(b,g){return this.load().then(()=>this.source.queryObjectIds(y.from(b)||this.createQuery(),g))}queryFeatureCount(b,g){return this.load().then(()=>this.source.queryFeatureCount(y.from(b)||this.createQuery(),g))}queryExtent(b,g){return this.load().then(()=>
this.source.queryExtent(y.from(b)||this.createQuery(),g))}async hasDataChanged(){try{const {dataChanged:b,updates:g}=await this.source.refresh(this.customParameters);null!=g&&this.read(g,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0});return b}catch{}return!1}_getLayerDomain(b){if(!this.fields)return null;let g=null;this.fields.some(h=>{h.name===b&&(g=h.domain);return!!g});return g}};c.__decorate([e.property({readOnly:!0,json:{read:!1,write:!1}})],d.prototype,"capabilities",null);c.__decorate([e.property({type:String})],
d.prototype,"copyright",void 0);c.__decorate([e.property({readOnly:!0})],d.prototype,"createQueryVersion",null);c.__decorate([e.property(ea.timeZoneProperty("dateFieldsTimeReference"))],d.prototype,"dateFieldsTimeZone",void 0);c.__decorate([e.property({readOnly:!0})],d.prototype,"defaultPopupTemplate",null);c.__decorate([e.property({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],d.prototype,"definitionExpression",void 0);c.__decorate([e.property({type:String})],
d.prototype,"displayField",void 0);c.__decorate([e.property({type:Boolean})],d.prototype,"editingEnabled",void 0);c.__decorate([e.property(p.elevationInfo)],d.prototype,"elevationInfo",void 0);c.__decorate([e.property({type:[Z],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],d.prototype,"fields",void 0);c.__decorate([e.property(D.fieldsIndex)],d.prototype,"fieldsIndex",void 0);c.__decorate([e.property({type:fa,json:{name:"extent"}})],
d.prototype,"fullExtent",void 0);c.__decorate([e.property({type:["point","polygon","polyline","multipoint"],json:{read:{reader:t.featureGeometryTypeKebabDictionary.read}}})],d.prototype,"geometryType",void 0);c.__decorate([e.property({type:Boolean})],d.prototype,"hasZ",void 0);c.__decorate([e.property(p.id)],d.prototype,"id",void 0);c.__decorate([e.property({type:Boolean,readOnly:!0})],d.prototype,"isTable",null);c.__decorate([e.property(p.labelsVisible)],d.prototype,"labelsVisible",void 0);c.__decorate([e.property({type:[ba],
json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ca.reader},write:!0}})],d.prototype,"labelingInfo",void 0);c.__decorate([e.property(p.legendEnabled)],d.prototype,"legendEnabled",void 0);c.__decorate([e.property({type:["show","hide"]})],d.prototype,"listMode",void 0);c.__decorate([e.property({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],d.prototype,"objectIdField",void 0);c.__decorate([e.property(p.opacity)],
d.prototype,"opacity",void 0);c.__decorate([e.property({type:["GeoJSON"]})],d.prototype,"operationalLayerType",void 0);c.__decorate([e.property({readOnly:!0})],d.prototype,"parsedUrl",null);c.__decorate([e.property(p.popupEnabled)],d.prototype,"popupEnabled",void 0);c.__decorate([e.property({type:z,json:{name:"popupInfo",write:!0}})],d.prototype,"popupTemplate",void 0);c.__decorate([e.property({types:A.rendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},
"web-scene":{types:A.webSceneRendererTypes}}}})],d.prototype,"renderer",null);c.__decorate([e.property(p.screenSizePerspectiveEnabled)],d.prototype,"screenSizePerspectiveEnabled",void 0);c.__decorate([e.property({readOnly:!0})],d.prototype,"source",void 0);c.__decorate([e.property({type:O})],d.prototype,"spatialReference",void 0);c.__decorate([e.property({type:[X]})],d.prototype,"templates",void 0);c.__decorate([e.property()],d.prototype,"title",void 0);c.__decorate([e.property({json:{read:!1},readOnly:!0})],
d.prototype,"type",void 0);c.__decorate([e.property({type:String,readOnly:!0})],d.prototype,"typeIdField",void 0);c.__decorate([e.property({type:[Y]})],d.prototype,"types",void 0);c.__decorate([e.property(p.url)],d.prototype,"url",null);return d=c.__decorate([q.subclass("esri.layers.GeoJSONLayer")],d)});